#!/bin/bash
#
# Service Adjustment for HamoniKR OS Minimal Mode
# 
# Copyright 2022 HamoniKR Team. All rights reserved. 
# See LICENSE.md in the project root for license information.

[ "$EUID" = 0 ] && echo "Run with user authority. (EUID : $EUID)" && exit

log() {
    # stdout
    echo "$@"
    # write to logfile
    mkdir -p $HOME/.hamonikr/log
    exec 3>&1 1>>$HOME/.hamonikr/log/${0##*/}.log 2>&1 && echo "$(date +%Y-%m-%d_%H:%M_%S) ${0##*/} : $@"
    # stdout reset
    exec 1>&3 3>&-
}

process_file() {
    local file_path=$1
    local action=$2

    if [ ! -f ${file_path} ]; then
        log "[ERROR] Could not find ${file_path} file"
        return
    fi

    while IFS= read -r line || [[ -n "$line" ]]; do
        line=$(echo $line | xargs)  # Trim leading/trailing whitespace
        if [[ -n $line && ! $line =~ ^# ]]; then
            if [ "$action" = "kill" ]; then
                killall $line
                [ $? -eq 0 ] && log "killed $line"
            elif [ "$action" = "disable" ]; then
                if [ -f $HOME/.config/autostart/$line ]; then
                    mv $HOME/.config/autostart/$line $HOME/.config/autostart/$line.norun
                    [ $? -eq 0 ] && log "Disabled $line"
                fi
            elif [ "$action" = "enable" ]; then
                if [ -f $HOME/.config/autostart/$line.norun ]; then
                    mv $HOME/.config/autostart/$line.norun $HOME/.config/autostart/$line
                    [ $? -eq 0 ] && log "Enabled $line"
                fi
            fi
        fi
    done < ${file_path}
}

case "$1" in
    start)
        process_file "/usr/share/hamonikr/hamonikr-min/killps" "kill"
        process_file "/usr/share/hamonikr/hamonikr-min/killapps" "disable"
        ;;
    stop)
        process_file "/usr/share/hamonikr/hamonikr-min/killapps" "enable"
        ;;
    *)
        ;;
esac
